import { DBOutfit, DeskInfoV2, Inventory, MoveDirectionEnum_ENUM as MoveDirection, SpriteDirectionEnum_ENUM as SpriteDirection } from "./generated_DO_NOT_TOUCH/events";
export { SpriteDirection, MoveDirection };
export interface BaseRoomUserDB {
    allowScreenPointer?: boolean;
    currentlyEquippedWearables?: DBOutfit;
    deskInfo?: DeskInfoV2;
    inventory?: Inventory;
    name?: string;
}
export interface PlayerDB extends BaseRoomUserDB {
    affiliation?: string;
    allowScreenPointer?: boolean;
    busy?: boolean;
    connected?: boolean;
    currentDesk?: string;
    description?: string;
    deskInfo?: DeskInfoV2;
    emojiStatus?: string;
    focusModeEndTime?: string;
    inventory?: Inventory;
    isNpc?: boolean;
    itemString?: string;
    map?: string;
    name?: string;
    personalImageUrl?: string;
    phone?: string;
    profileImageUrl?: string;
    pronouns?: string;
    textStatus?: string;
    timezone?: string;
    title?: string;
    city?: string;
    country?: string;
    startDate?: string;
    x?: number;
    y?: number;
}
export declare type PlayerDBPartial = Partial<PlayerDB>;
export declare class PlayerDBFields implements PlayerDB {
    affiliation: string;
    allowScreenPointer: boolean;
    busy: boolean;
    connected: boolean;
    currentDesk: string;
    currentlyEquippedWearables?: DBOutfit;
    description: string;
    deskInfo: DeskInfoV2;
    emojiStatus: string;
    focusModeEndTime: string;
    inventory: Inventory;
    isNpc: boolean;
    itemString: string;
    map: string;
    name: string;
    personalImageUrl: string;
    phone: string;
    profileImageUrl: string;
    pronouns: string;
    textStatus: string;
    timezone: string;
    title: string;
    city: string;
    country: string;
    startDate: string;
    x: number;
    y: number;
    isRecordingClient: boolean;
}
export declare class Player extends PlayerDBFields {
    currentlyEquippedWearables?: undefined;
    direction: SpriteDirection;
    ghost: number;
    spotlighted: number;
    emote: string | undefined;
    workCondition: number;
    away: boolean;
    activelySpeaking: number;
    lastActive: string;
    lastInputId: number;
    whisperId: string;
    isSignedIn: boolean;
    outfitString: string;
    eventStatus: string;
    inConversation: boolean;
    currentArea: string;
    vehicleId: string;
    speedModifier: number;
    isAlone: boolean;
    isMobile: boolean;
    followTarget: string;
    manualVideoSrc: string;
    manualDefaultVideoImageSrc: string;
    manualScreenSrc: string;
    subtitle: string;
    constructor();
}
