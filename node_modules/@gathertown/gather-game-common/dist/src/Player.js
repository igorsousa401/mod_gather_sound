"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Player = exports.PlayerDBFields = exports.MoveDirection = exports.SpriteDirection = void 0;
const events_1 = require("./generated_DO_NOT_TOUCH/events");
Object.defineProperty(exports, "MoveDirection", { enumerable: true, get: function () { return events_1.MoveDirectionEnum_ENUM; } });
Object.defineProperty(exports, "SpriteDirection", { enumerable: true, get: function () { return events_1.SpriteDirectionEnum_ENUM; } });
class PlayerDBFields {
    constructor() {
        this.affiliation = "";
        this.allowScreenPointer = true;
        this.busy = false;
        this.connected = false;
        this.currentDesk = "";
        this.currentlyEquippedWearables = undefined;
        this.description = "";
        this.deskInfo = { deskId: "" };
        this.emojiStatus = "";
        this.focusModeEndTime = "";
        this.inventory = { items: {}, order: {} };
        this.isNpc = false;
        this.itemString = "";
        this.map = "";
        this.name = "";
        this.personalImageUrl = "";
        this.phone = "";
        this.profileImageUrl = "";
        this.pronouns = "";
        this.textStatus = "";
        this.timezone = "";
        this.title = "";
        this.city = "";
        this.country = "";
        this.startDate = "";
        this.x = 0;
        this.y = 0;
        this.isRecordingClient = false;
    }
}
exports.PlayerDBFields = PlayerDBFields;
class Player extends PlayerDBFields {
    constructor() {
        super();
        this.direction = events_1.SpriteDirectionEnum_ENUM.Down;
        this.ghost = 0;
        this.spotlighted = 0;
        this.emote = undefined;
        this.workCondition = 1;
        this.away = false;
        this.activelySpeaking = 0;
        this.lastActive = "";
        this.lastInputId = 0;
        this.whisperId = "";
        this.isSignedIn = false;
        this.outfitString = "";
        this.eventStatus = "";
        this.inConversation = false;
        this.currentArea = "";
        this.vehicleId = "";
        this.speedModifier = 1;
        this.isAlone = true;
        this.isMobile = false;
        this.followTarget = "";
        this.manualVideoSrc = "";
        this.manualDefaultVideoImageSrc = "";
        this.manualScreenSrc = "";
        this.subtitle = "";
        delete this.currentlyEquippedWearables;
    }
}
exports.Player = Player;
//# sourceMappingURL=Player.js.map